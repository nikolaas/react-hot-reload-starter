{"version":3,"sources":["webpack:///./src/components/Article/Article.js","webpack:///./src/routes/SyncCounter/SyncCounter.jsx","webpack:///./src/routes/SyncCounter/SyncCounter.actions.js","webpack:///./src/routes/SyncCounter/index.js","webpack:///./src/routes/SyncCounter/SyncCounter.reducer.js"],"names":["Article_Article_Article","_ref","className","title","children","react_default","a","createElement","_len","arguments","length","args","Array","_key","filter","Boolean","join","classNames","propTypes","prop_types_default","string","any","defaultProps","SyncCounter_RawSyncCounter","counter","onIncrement","BaseLayout","Article","style","color","onClick","number","func","isRequired","mapDispatchToProps","type","payload","undefined","SyncCounter","Object","es","state","syncCounter","store","action","__webpack_exports__"],"mappings":"8HAMaA,UAAU,SAAAC,GAAoC,IAAjCC,EAAiCD,EAAjCC,UAAWC,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,SACxC,OACIC,EAAAC,EAAAC,cAAA,WAASL,UAJE,mBAAAM,EAAAC,UAAAC,OAAIC,EAAJC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAIF,EAAJE,GAAAJ,UAAAI,GAAA,OAAaF,EAAKG,OAAOC,SAASC,KAAK,KAI9BC,CAAW,UAAWf,IACtCG,EAAAC,EAAAC,cAAA,MAAIL,UAAU,kBAAkBC,GAC/BC,KAKbJ,EAAQkB,WACJhB,UAAWiB,EAAAb,EAAUc,OACrBjB,MAAOgB,EAAAb,EAAUe,IACjBjB,SAAUe,EAAAb,EAAUe,KAGxBrB,EAAQsB,cACJpB,UAAW,KACXC,MAAO,KACPC,SAAU,6KCjBP,IAAMmB,EAAiB,SAAAtB,GAA8B,IAA3BuB,EAA2BvB,EAA3BuB,QAASC,EAAkBxB,EAAlBwB,YACtC,OACIpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,GAAQxB,MAAM,WACXE,EAAAC,EAAAC,cAAA,KAAGL,UAAU,sBAAb,YAA2CG,EAAAC,EAAAC,cAAA,QAAMqB,OAASC,MAAO,SAAWL,IAC5EnB,EAAAC,EAAAC,cAAA,UAAQuB,QAAS,kBAAML,MAAvB,gBAMhBF,EAAeL,WACXM,QAASL,EAAAb,EAAUyB,OACnBN,YAAaN,EAAAb,EAAU0B,KAAKC,YAGhCV,EAAeD,cACXE,QAAS,GAGb,IAKMU,GACFT,YCjCG,WACH,OAASU,KAAM,YAAaC,QADK3B,UAAAC,OAAA,QAAA2B,IAAA5B,UAAA,GAAAA,UAAA,GAAH,KDoClC6B,EAAeC,OAAAC,EAAA,EAAAD,CATS,SAAAE,GAEpB,OAASjB,QADeiB,EAAhBC,cAQ4BR,EAAxC,CAA4DX,GEhC5DgB,OAAAI,EAAA,EAAAJ,CAAqB,cCFrB,WAAsD,IAAtCE,EAAsChC,UAAAC,OAAA,QAAA2B,IAAA5B,UAAA,GAAAA,UAAA,GAFjC,EAEiBmC,EAAgBnC,UAAAC,OAAA,QAAA2B,IAAA5B,UAAA,GAAAA,UAAA,MAClD,OAAQmC,EAAOT,MACX,IAAK,SAGD,OAPS,EASb,IAAK,YAED,OAAOM,EADOG,EAAOR,QAGzB,QACI,OAAOK,KDRnBI,EAAA","file":"js/1.js?hash=936acc797481f74372d2","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Article.scss';\n\nconst classNames = (...args) => args.filter(Boolean).join(' ');\n\nexport const Article = ({ className, title, children }) => {\n    return (\n        <article className={classNames('Article', className)}>\n            <h2 className=\"Article__title\">{title}</h2>\n            {children}\n        </article>\n    );\n};\n\nArticle.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.any,\n    children: PropTypes.any,\n};\n\nArticle.defaultProps = {\n    className: null,\n    title: null,\n    children: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BaseLayout } from '../../components/BaseLayout';\nimport { Article } from '../../components/Article';\nimport { increment } from './SyncCounter.actions';\n\nexport const RawSyncCounter = ({ counter, onIncrement }) => {\n    return (\n        <BaseLayout>\n            <Article title=\"Counter\">\n                <p className=\"SyncCounter__value\">Counter: <span style={{ color: '#f00' }}>{counter}</span></p>\n                <button onClick={() => onIncrement()}>Increment</button>\n            </Article>\n        </BaseLayout>\n    );\n};\n\nRawSyncCounter.propTypes = {\n    counter: PropTypes.number,\n    onIncrement: PropTypes.func.isRequired,\n};\n\nRawSyncCounter.defaultProps = {\n    counter: 0,\n};\n\nconst mapStateToProps = state => {\n    const { syncCounter } = state;\n    return { counter: syncCounter };\n};\n\nconst mapDispatchToProps = {\n    onIncrement: increment,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RawSyncCounter);\n","export function increment(delta = 1) {\n    return { type: 'increment', payload: delta };\n}\n","import { registerAsyncReducer } from '../../store';\nimport SyncCounter from './SyncCounter';\nimport reducer from './SyncCounter.reducer';\n\nregisterAsyncReducer('syncCounter', reducer);\n\nexport default SyncCounter;\n","const initialState = 0;\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n        case '@@INIT': {\n            // после замены редьюсера происходит повтор всех экшенов, начиная с этого, поэтому чтобы\n            // консистентность состояния приложения не была нарушена, сбрасываем состояние в начальное\n            return initialState;\n        }\n        case 'increment': {\n            const delta = action.payload;\n            return state + delta;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n"],"sourceRoot":""}